// در فایل CRange.mqh، این متد را جایگزین متد فعلی کنید
void ManageActiveTrade()
{
    if(m_activeTicket == 0)
    {
        // منطق پیدا کردن تیکت فعال در صورت ری‌استارت اکسپرت
        for(int pos = PositionsTotal() - 1; pos >= 0; pos--)
        {
            if(PositionSelectByTicket(PositionGetTicket(pos)) && PositionGetInteger(POSITION_MAGIC) == m_magicNumber)
            {
                m_activeTicket = PositionGetInteger(POSITION_TICKET);
                break;
            }
        }
        if(m_activeTicket == 0) return; // هیچ پوزیشن فعالی یافت نشد
    }

    if(!PositionSelectByTicket(m_activeTicket))
    {
        if(InpDebugMode) Print("پوزیشن با تیکت ", m_activeTicket, " برای رنج ", m_rangeIndex, " دیگر فعال نیست. ریست کردن وضعیت.");
        m_activeTicket = 0;
        m_trailingActivated = false;
        m_state = STATE_WAITING; // بازگشت به حالت انتظار برای روز بعد
        return;
    }

    // اگر تریلینگ قبلاً فعال شده، فقط همان را ادامه بده
    if(m_trailingActivated)
    {
        TradeManager::TrailingStop(m_activeTicket, m_trailingMode, m_trailingAtrPeriod, m_trailingAtrMultiplier, m_trailingAtrHandle);
        return;
    }

    // --- منطق جدید خروج پله‌ای بر اساس پوینت ---
    double openPrice = PositionGetDouble(POSITION_PRICE_OPEN);
    double sl = PositionGetDouble(POSITION_SL);

    // 1. محاسبه فاصله استاپ لاس به پوینت
    if(sl == 0) return; // اگر استاپ لاس وجود ندارد، خارج شو
    double slPoints = MathAbs(openPrice - sl) / _Point;
    if(slPoints < 1) return; // جلوگیری از تقسیم بر صفر

    // 2. محاسبه تارگت سود به پوینت برای فعال شدن خروج پله‌ای
    double targetPoints = slPoints * m_rrRatio;

    // 3. محاسبه سود فعلی به پوینت
    double currentPointsProfit = 0;
    ENUM_POSITION_TYPE posType = (ENUM_POSITION_TYPE)PositionGetInteger(POSITION_TYPE);
    if(posType == POSITION_TYPE_BUY)
    {
        currentPointsProfit = (SymbolInfoDouble(_Symbol, SYMBOL_BID) - openPrice) / _Point;
    }
    else // POSITION_TYPE_SELL
    {
        currentPointsProfit = (openPrice - SymbolInfoDouble(_Symbol, SYMBOL_ASK)) / _Point;
    }

    // 4. مقایسه بر اساس پوینت
    if(currentPointsProfit >= targetPoints)
    {
        if(InpDebugMode) Print("تارگت R:R (", m_rrRatio, ") برای رنج ", m_rangeIndex, " فعال شد. شروع خروج پله‌ای.");

        double volume = PositionGetDouble(POSITION_VOLUME);
        double closeVolume = volume * (m_partialClosePercent / 100.0);

        // اطمینان از اینکه حجم برای بستن معتبر است
        closeVolume = NormalizeDouble(closeVolume, 2);
        if(closeVolume < g_volumeMin) closeVolume = 0;

        if(closeVolume > 0 && TradeManager::PartialClose(m_activeTicket, closeVolume))
        {
            // فقط در صورت موفقیت بستن بخشی، استاپ را به نقطه ورود منتقل کن
            if(TradeManager::MoveSLToBreakEven(m_activeTicket, openPrice))
            {
                m_trailingActivated = true; // فعال کردن تریلینگ فقط پس از موفقیت هر دو مرحله
                if(InpDebugMode) Print("تریلینگ برای رنج ", m_rangeIndex, " فعال شد.");
            }
        }
    }
}
