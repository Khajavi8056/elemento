else if(mode == TRAILING_ICHIMOKU_B)  // حالت جدید: تریلینگ بر اساس Senkou Span B
{
   double senkouB = g_trendFilter.GetSenkouSpanB(trendTf);  // گرفتن Senkou Span B از فیلتر روند
   if(senkouB == 0)  // چک مقدار معتبر
   {
      CLogger::Log("خطا در گرفتن Senkou Span B برای تریلینگ.");  // چاپ خطا
      return false;  // بازگشت شکست
   }
   double buffer = 10 * _Point;  // بافر ثابت (۱۰ پوینت) برای فاصله از خط – می‌تونی این رو ورودی کنی
   double trailing;  // SL جدید بر اساس سنکو
   if(posType == POSITION_TYPE_BUY) {
      trailing = senkouB - buffer;  // برای خرید: SL کمی پایین‌تر از سنکو
      if(trailing > sl && MathAbs(trailing - sl) >= _Point * Inp_Trailing_MinChange_Points) {  // چک بهبود و حداقل تغییر
         CTrade trade;
         if(trade.PositionModify(ticket, trailing, PositionGetDouble(POSITION_TP))) {
            CLogger::Log("تریلینگ SL به‌روزرسانی شد برای تیکت " + (string)ticket + " (ایچیموکو: " + DoubleToString(trailing, _Digits) + ")");
            return true;
         }
      }
   } else {
      trailing = senkouB + buffer;  // برای فروش: SL کمی بالاتر از سنکو
      if(trailing < sl && MathAbs(trailing - sl) >= _Point * Inp_Trailing_MinChange_Points) {
         CTrade trade;
         if(trade.PositionModify(ticket, trailing, PositionGetDouble(POSITION_TP))) {
            CLogger::Log("تریلینگ SL به‌روزرسانی شد برای تیکت " + (string)ticket + " (ایچیموکو: " + DoubleToString(trailing, _Digits) + ")");
            return true;
         }
      }
   }
   return false;  // اگر بهبود نداشت, false
}
