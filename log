// به‌روزرسانی در کندل جدید: اجرای ماشین حالت (نسخه نهایی و اصلاح شده)
void CRange::UpdateOnNewBar()
{
   // ==================== شروع اصلاحیه اصلی ====================
   // قدم اول: قبل از هر کاری و فارغ از هر حالتی، زمان پاکسازی رو چک کن
   // این بلوک تضمین می‌کنه که پاکسازی همیشه در اولویت قرار داره.
   if (m_cleanupTime != 0 && TimeCurrent() >= m_cleanupTime && !m_isCleanedForThisCycle)
   {
       CLogger::Log("زمان پاکسازی فرا رسید (حالت فعلی: " + EnumToString(m_currentState) + "). اجرای پاکسازی نرم.", m_rangeIndex);
       
       // مستقیماً SoftCleanup رو اجرا میکنیم
       SoftCleanup();
       
       // حالت رو به IDLE تغییر میدیم تا برای روز بعد آماده بشه
       m_currentState = RANGE_IDLE;
       
       // با return از تابع خارج میشیم تا هیچ منطق معاملاتی دیگه‌ای در این کندل اجرا نشه
       return;
   }
   // ==================== پایان اصلاحیه اصلی =====================

   // لاگ ورود به تابع برای ردیابی
   CLogger::Log("------ در حالت " + EnumToString(m_currentState) + " ------", m_rangeIndex);

   // سوئیچ بر اساس حالت فعلی برای اجرای تابع مربوطه
   switch(m_currentState)
   {
      case RANGE_IDLE:
      {
         // چک اگر زمان وارد محدوده رنج شده باشد
         datetime currentTime = TimeCurrent();
         datetime startTime, endTime;
         if(CTimeHelper::CalculateRangeTimes(m_startHour, m_startMinute, m_endHour, m_endMinute, startTime, endTime))
         {
            if(currentTime >= startTime && currentTime < endTime)
            {
               CLogger::Log("زمان رنج فرا رسید. انتقال به RANGE_IDENTIFYING.", m_rangeIndex);
               m_currentState = RANGE_IDENTIFYING;
            }
         }
         break;
      }
      case RANGE_IDENTIFYING:
         IdentifyAndValidateRange();
         break;
      case RANGE_ARMED:
         WaitForBreakerCandle();
         break;
      case AWAITING_CONFIRMATION:
         ProcessEntryAttempt();
         break;
      case RANGE_TRADE_ACTIVE:
         // این بخش دیگه فقط برای لاگ زدنه، چون پاکسازی در بالای تابع انجام میشه
         CLogger::Log("معامله فعال است. منتظر پاکسازی.", m_rangeIndex);
         break;
      case RANGE_EXPIRED:
         // این کیس الان بیشتر برای موارد استثنایی و خطاهای پیش‌بینی نشده استفاده میشه
         SoftCleanup();
         m_currentState = RANGE_IDLE;
         break;
   }
   
   // فراخوانی قدیمی تابع CheckCleanup() از اینجا حذف شده است.
}
